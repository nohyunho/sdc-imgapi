#!/bin/bash
#
# Emit bash commands to set your environment (i.e. 'export MANTA_URL=' et al)
# for using Manta tooling for the IMGAPI's configured Manta.
#
# If there is no "storage.manta" block in the config, then it silented emits
# nothing (i.e. that isn't an error).
#
# Usage:
#       eval $(manta-env)
#       mls ~~/stor
#


if [[ -n "$TRACE" ]]; then
    export PS4='[\D{%FT%TZ}] ${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
    set -o xtrace
fi
set -o errexit
set -o pipefail


export PATH=/opt/smartdc/imgapi/build/node/bin:/opt/local/bin:/opt/local/sbin:/usr/bin:/usr/sbin
TOP=$(cd $(dirname $0)/../ 2>/dev/null; pwd)
JSON=json


# ---- support stuff

function fatal {
    echo "$0: fatal error: $*" >&2
    exit 1
}

function errexit {
    [[ $1 -ne 0 ]] || exit 0
    fatal "error exit status $1" >&2
}


# ---- mainline

trap 'errexit $?' EXIT

if [[ -f /data/imgapi/etc/imgapi.config.json ]]; then
    CONFIG=/data/imgapi/etc/imgapi.config.json
else
    fatal "could not find imgapi.config.json"
fi

mantaConfig="$(node /opt/smartdc/imgapi/lib/config.js manta)"
if [[ -z "$mantaConfig" ]]; then
    exit 0
fi

echo "export MANTA_URL=$(echo "$mantaConfig" | $JSON url)"
echo "export MANTA_USER=$(echo "$mantaConfig" | $JSON user)"
echo "export MANTA_KEY_ID=$(echo "$mantaConfig" | $JSON keyId)"
if [[ "$(echo "$mantaConfig" | $JSON insecure)" == "true" ]]; then
    echo "export MANTA_TLS_INSECURE=1"
fi
